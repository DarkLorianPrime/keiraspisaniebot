from vkhandler.Utils.Modules.Config import vk
from vkhandler.Utils.Modules.Utils.decorators import search_command_handler, command_handler
from vkhandler.Utils.Modules.Utils.functional import in_group_chat_error, return_error
from vkhandler.models import PushGroup


@search_command_handler(['!–Ω–æ–≤–∞—è–≥—Ä—É–ø–ø–∞', ' '], ['!–¥–æ–±–∞–≤–∏—Ç—å–≥—Ä—É–ø–ø—É', ' '])
def add_push_group(**kwargs):
    in_group_chat_error(kwargs["bot"], kwargs["user_id"])
    text = kwargs["text"].lower().split(' ')
    if len(text) <= 2:
        return_error('–í—ã –¥–æ–ª–∂–Ω—ã —É–∫–∞–∑–∞—Ç—å —Ö–æ—Ç—è –±—ã 1 ID ‚ùå.', chat_id=kwargs["chat_id"])
    ids = []
    for i in range(2, len(text)):
        user_id = text[i].split('|')
        if len(user_id) < 2:
            return_error(f'–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–∫–∞–∑–∞–Ω—ã @ ‚ùå.\n–ù–∞–ø—Ä–∏–º–µ—Ä: {"@" + text[i]}',
                         chat_id=kwargs["chat_id"])
        user_id = user_id[1].replace(']', '')
        ids.append(user_id)
    if PushGroup.objects.filter(name=text[1], chat_id=kwargs["chat_id"]).exists():
        return_error(f'–¢–∞–∫–∞—è –≥—Ä—É–ø–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚ùå.', chat_id=kwargs["chat_id"])
    PushGroup.objects.create(name=text[1], chat_id=kwargs["chat_id"], users=ids)
    vk.messages.send(chat_id=kwargs["chat_id"], message=f'–ì—Ä—É–ø–ø–∞ {text[1]} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.', random_id=0)


@search_command_handler(['!—É–¥–∞–ª–∏—Ç—å–≥—Ä—É–ø–ø—É', ' '], ['!—É–¥–∞–ª–∏–≥—Ä—É–ø–ø—É', ' '], ['!–∑–∞–±—É–¥—å–≥—Ä—É–ø–ø—É', ' '])
def del_push_groups(**kwargs):
    in_group_chat_error(kwargs["bot"], kwargs["user_id"])
    text = kwargs["text"].lower().split(' ')
    PushGroup.objects.filter(chat_id=kwargs["chat_id"], name=text[1]).delete()
    vk.messages.send(chat_id=kwargs["chat_id"], message='–ì—Ä—É–ø–ø–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞', random_id=0)


@command_handler('!–≥—Ä—É–ø–ø—ã')
def get_push_groups(**kwargs):
    in_group_chat_error(kwargs["bot"], kwargs["user_id"])
    push = PushGroup.objects.filter(chat_id=kwargs["chat_id"])
    if not push.exists():
        return_error(f'–ì—Ä—É–ø–ø—ã –≤ –±–µ—Å–µ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã ‚ùå.', chat_id=kwargs["chat_id"])
    text = ''
    for i in push.all():
        text += f'–ì—Ä—É–ø–ø–∞: {i.name},\n –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –Ω–µ–π: {len(i.users)}\n'
    vk.messages.send(chat_id=kwargs["chat_id"], message=text, random_id=0)


@search_command_handler(['!—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', ' '])
def push_group(**kwargs):
    in_group_chat_error(kwargs["bot"], kwargs["user_id"])
    name = kwargs["text"].lower().split(' ')
    if len(name) < 2:
        return_error('–£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã ‚ùå.', kwargs["chat_id"])
    users = PushGroup.objects.filter(chat_id=kwargs["chat_id"], name=name[1])
    if not users.exists():
        return_error(f'–ì—Ä—É–ø–ø—ã –≤ –±–µ—Å–µ–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã ‚ùå.', chat_id=kwargs["chat_id"])
    users = users.first().users
    text = ''
    for user in users:
        text += f'{user} (üå†)'
    vk.messages.send(chat_id=kwargs["chat_id"], message=text, random_id=0)
